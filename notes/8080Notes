Space Invaders, (C) Taito 1978, Midway 1979

   CPU: Intel 8080 @ 2MHz (CPU similar to the (newer) Zilog Z80)    

   Interrupts: $cf (RST 8) at the start of vblank, $d7 (RST $10) at the end of vblank.    

   Video: 256(x)*224(y) @ 60Hz, vertical monitor. Colours are simulated with a    
   plastic transparent overlay and a background picture.    
   Video hardware is very simple: 7168 bytes 1bpp bitmap (32 bytes per scanline).    

   Sound: SN76477 and samples.    

   Memory map:    
    ROM    
    $0000-$07ff:    invaders.h    
    $0800-$0fff:    invaders.g    
    $1000-$17ff:    invaders.f    
    $1800-$1fff:    invaders.e    

    RAM    
    $2000-$23ff:    work RAM    
    $2400-$3fff:    video RAM    

    $4000-:     RAM mirror



The 8080 allows for 8 bytes for each ISR (interrupt handler), but space
invaders handles this by jumping to a place with  more memory

- so, the ISR codes for interrupts start at $0, $8, $20, .., $38
- notice that ISR 2 is  longer than 8 bytes, so probably it didnt expect
  to ever need interrupt 3 since it overlaps onto it

The 8080 has working ram start at $2000 address
The startup of th code jumps to a part and starts loading stuff onto the video
memory from some other place in memory. We notice that some of the data is
from the ROM itself. this means that data is interleaved with code



// GLFW
to install:

clone the repo
go into the repo
make
sudo make install // this will install the library into your includes folder
add -lglfw3 as a dependency in the Makefile so that it knows to look for that
in the includes folder
